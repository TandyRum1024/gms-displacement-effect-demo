<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGherkin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>offset = 0;
time = 0;
angle = 0;

image_speed = 0;

var _rand = irandom_range(0, 100);
if (_rand &lt;= 10)
    image_index = 1;
else
    image_index = 0;

ps = part_system_create();
part_system_automatic_draw(ps, false);
pSpark = part_type_create();
part_type_sprite(pSpark, sprParticle, true, false, true);
part_type_alpha3(pSpark, 0, 0.9, 0);
part_type_colour_hsv(pSpark, 0, 255, 80, 120, 242, 244);
part_type_life(pSpark, 20, 40);
part_type_gravity(pSpark, 0.05, 270);
part_type_size(pSpark, 0.85, 2.5, 0, 0.1);
part_type_blend(pSpark, true);
part_type_orientation(pSpark, 0, 360, 2, 5, true);

eSparkEmit = part_emitter_create(ps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_stream(ps, eSparkEmit, pSpark, -2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy particle systems
part_emitter_destroy_all(ps);
part_system_destroy(ps);
part_type_destroy(pSpark);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw orbiting gherkin
var _cx = room_width &gt;&gt; 1, _cy = room_height &gt;&gt; 1;
var _deltaY = (_cy - 64) - mouse_y;

var _persp = (_deltaY / _cy) * -0.2;// 0.5;
var _radius = 200 + dsin(time * 10) * 10;

// calc angle
time++;
angle = time + offset;

var _cos = dcos(angle), _sin = dsin(angle);
depth = -_sin * _radius;

var _ox = (_cos * _radius), _oy = (_sin * _radius * _persp);
var _ozoom = 1 + _sin * 0.5;
var _oangle = dsin(time * 10 + offset * 2) * 42;
var _owave = dsin(time * 5 + offset) * 24;
var _ocolour = make_colour_hsv(time * 2 + offset * 10, ((dsin(time) * 0.5) + 0.5) * 55, 155 + ((_sin * 0.5) + 0.5) * 100);

var _x = _cx + _ox, _y = _cy + _oy + 64;
part_emitter_region(ps, eSparkEmit, _x - 24, _x + 24, _y - 24, _y + 24, ps_shape_ellipse, ps_distr_linear);
draw_sprite_ext(sprite_index, 0, _x, _y + _owave, _ozoom, _ozoom, _oangle, _ocolour, 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_drawit(ps);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
