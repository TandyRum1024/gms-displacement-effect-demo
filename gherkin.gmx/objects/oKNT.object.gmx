<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dirX = 1;
dirY = 0;

intensity = 1;
time = 0;

uDepthmap = shader_get_sampler_index(shdDisplacement, "uDepthmap");
uDirection = shader_get_uniform(shdDisplacement, "uDirection");
uIntensity = shader_get_uniform(shdDisplacement, "uIntensity");
uTint = shader_get_uniform(shdDisplacement, "uTint");
uTintColour = shader_get_uniform(shdDisplacement, "uTintColour");

// particle
global.part = part_system_create();
part_system_automatic_draw(global.part, false);

pSpark2 = part_type_create();
part_type_sprite(pSpark2, sprParticleBokeh, false, false, false);
part_type_alpha3(pSpark2, 0.2, 0.6, 0);
part_type_colour_hsv(pSpark2, 0, 255, 200, 255, 142, 184);
part_type_life(pSpark2, 100, 200);
part_type_size(pSpark2, 0.25, 2.5, 0, 0.025);
part_type_direction(pSpark2, 45, 135, 0, 0.1);
part_type_speed(pSpark2, 0.01, 0.2, 0.05, 0.1);
part_type_blend(pSpark2, true);
part_type_orientation(pSpark2, 0, 360, 0.1, 1, true);

eBokehEmit = part_emitter_create(global.part);
part_emitter_region(global.part, eBokehEmit, 0, room_width, room_height, room_height + 64, ps_shape_line, ps_distr_linear);

// Roll the visualization
randomize();
sprite_index = choose(sprKot, sprGato, sprKot, sprGato);
bgIdx = choose(bgSpace, bgChecker, bgSpace, bgChecker);
gherkinSpr = choose(sprStuffs, sprGherkin, sprStuffs, sprGherkin);

// SUMMON THE GHERKINS!!
var _num = 10;
for (var i=0; i&lt;_num; i++)
{
    var _gherkin = instance_create(0, 0, oGherkin);
    _gherkin.offset = i * (360 / _num);
    _gherkin.sprite_index = gherkinSpr;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_stream(global.part, eBokehEmit, pSpark2, -10);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_emitter_destroy_all(global.part);
part_system_destroy(global.part);
part_type_destroy(pSpark2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// fill BG
//draw_clear($00DDFF);
draw_background_tiled(bgIdx, time * 2, time * 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time++;

// calc delta pos
var _cx = room_width &gt;&gt; 1, _cy = room_height &gt;&gt; 1;
var _deltaX = _cx - window_mouse_get_x(), _deltaY = _cy - window_mouse_get_y();

// normalize &amp; apply to dir*
var _len = sqrt(_deltaX * _deltaX + _deltaY * _deltaY);

// limit the displacement strength inside of certain range
// so that moving mouse far enough from center
// won't make the effect stronger anymore
var _sglodion = 1 / max(_len, 128);

// &amp; lerp values to desired value over few frames
dirX = lerp(dirX, _deltaX * _sglodion, 0.42);
dirY = lerp(dirY, _deltaY * _sglodion, 0.42);

// calc intensity
// intensity = 1 + sin(time * 0.42) * 0.5;
intensity = 1.5;

// setup shader stuff
shader_set(shdDisplacement);
shader_set_uniform_f(uIntensity, intensity); // set some uniforms..
shader_set_uniform_f(uDirection, dirX, dirY);
texture_set_stage(uDepthmap, sprite_get_texture(sprite_index, 1));

// cat shadow
var _shadowcol = $3E2A40;
shader_set_uniform_f(uTint, 1);
shader_set_uniform_f(uTintColour, (_shadowcol &amp; $0000FF) / 255, ((_shadowcol &amp; $00FF00) &gt;&gt; 8) / 255, ((_shadowcol &amp; $FF0000) &gt;&gt; 16) / 255, 1);
draw_sprite(sprite_index, 0, _cx + 16, _cy + 16);

// real cat
shader_set_uniform_f(uTint, 0);
draw_sprite(sprite_index, 0, _cx, _cy);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_drawit(global.part);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reload demo
game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
